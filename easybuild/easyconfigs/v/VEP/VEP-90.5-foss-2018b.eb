#
# EasyConfig for the Ensembl Variant Effect Predictor (VEP)
#

easyblock = 'Tarball'

name = 'VEP'
version = '90.5'

homepage = 'http://www.ensembl.org/vep'
description = """Tool for analysis, annotation, and prioritization of genomic variants
using (cached) Ensembl databases."""

#
# Don't use 'dummy' as toolchain version to make sure dependencies are loaded
# both at build as well as at runtime. With 'dummy' as toolchain version,
# dependencies will only be loaded at runtime.
#
toolchain = {'name': 'foss', 'version': '2018b'}

osdependencies = [
    ('mysql-devel', 'mariadb-devel')
]

dependencies = [
    ('PerlPlus', '5.22.0', '-v17.01.1'),
    ('HTSlib', '1.3.2'),
]

source_urls = ['https://github.com/Ensembl/ensembl-vep/archive/release/']
sources = ['%(version)s.tar.gz']
patches = ['VEP-%(version)s.patch']
checksums = [
    '4e75bf38f0f56762d717c632f4c2176e', # 90.5.tar.gz
    'e315c868df31c45540417f52f5635f1d', # VEP-90.5.patch
]

#
# Customizations for the install step.
#
#start_dir = 'scripts/variant_effect_predictor'
perl_scripts = [
    'INSTALL.pl',
    'convert_cache.pl',
    'filter_vep',
    'haplo',
    'variant_recoder',
    'vep',
]
not_scripts = [
    'modules/Bio/EnsEMBL/VEP/BaseVEP.pm',
    'examples/homo_sapiens_GRCh37.vcf',
    'examples/homo_sapiens_GRCh38.vcf',
    'examples/mus_musculus_GRCm38.vcf',
    'cpanfile',
    'README.md',
]
#
# Make scripts executable and run VEP installer.
#  * Mode may by masked by umask.
#  * The INSTALL.pl script will download the specified caches
#    and convert them using convert_cache.pl: both may take quite some time!
#
import os
vep_cache_dir = '%s/data/Ensembl/VEP/%s/' % (os.environ["EASYBUILD_INSTALLPATH"], '%(version_major)s')
postinstallcmds = [
    'chmod    a+x            %(installdir)s/*.pl',
    'chmod -R g+rwX,o+rX,o-w %(installdir)s/*',
    'mkdir -p "%s"' % (vep_cache_dir),
    'PERL5LIB="%s:${PERL5LIB}" && %s/INSTALL.pl --NO_UPDATE --NO_HTSLIB --AUTO acf --DESTDIR %s --CACHEDIR %s --SPECIES homo_sapiens --ASSEMBLY GRCh37' % ('%(installdir)s', '%(installdir)s', '%(installdir)s', vep_cache_dir),
    'PERL5LIB="%s:${PERL5LIB}" && %s/INSTALL.pl --NO_UPDATE --NO_HTSLIB --AUTO  cf --DESTDIR %s --CACHEDIR %s --SPECIES homo_sapiens --ASSEMBLY GRCh38' % ('%(installdir)s', '%(installdir)s', '%(installdir)s', vep_cache_dir),
    'chmod -R g+rwX,o+rX,o-w %s' % (vep_cache_dir),
]

#
# Sanity check.
#
sanity_check_paths = {
    'files': perl_scripts + not_scripts,
    'dirs': ['modules', 'examples', 't', vep_cache_dir],
}

#
# Create module.
#
moduleclass = 'bio'
modextravars = {'VEP_CACHE_DIR': vep_cache_dir}
modextrapaths = {
    'PERL5LIB': 'modules',
    'PATH': ['', 'htslib'],
}
modloadmsg = """
===================================================================================================================================================================
WARNING: Do not violate Ensembl's reasonable use policy on the public servers by annotating large data sets (> 100 variants) as this will result in a network ban.
         Use the local cache instead by starting your command like this when executing the Variant Effect Predictor (VEP):

         vep --cache --offline --dir ${VEP_CACHE_DIR} --db_version=%(version_major)s --buffer 1000 --species homo_sapiens ...
         
         NB: caches for both GRCh37 and GRCh38 have been deployed with this module.

===================================================================================================================================================================
"""
