#
# EasyConfig for Combined Annotation Dependent Depletion (CADD).
#

easyblock = 'Tarball'

name = 'CADD'
version = 'v1.4'

homepage = 'http://cadd.gs.washington.edu/home'
description = """
Tool for scoring the deleteriousness of variants in the human genome(v1.4).
"""

#
# Don't use 'dummy' as toolchain version to make sure dependencies are loaded
# both at build as well as at runtime. With 'dummy' as toolchain version,
# dependencies will only be loaded at runtime.
#
#toolchain = {'name': 'dummy', 'version': 'dummy'}
toolchain = {'name': 'foss', 'version': '2018b'}

dependencies = [
    ('PythonPlus', '2.7.16', '-v20.02.1', ('foss', '2018b')),
    ('HTSlib', '1.9', '', ('foss', '2018b')),
    ('SAMtools', '1.9', '', ('foss', '2018b')),
    ('VEP', '92.0', '-Perl-5.30.0', ('foss', '2018b')),
]

#
# Example URL: 
# http://krishna.gs.washington.edu/download/%(name)s/%(version)s/
#
source_urls = [ 
    # Only for annotations which is built on genome build GRCh37/hg19
    'https://krishna.gs.washington.edu/download/%(name)s/%(version)s/GRCh37/',
    'https://github.com/kircherlab/%(name)s-scripts/archive/',
]

sources = [
    #
    # Use arbitrary 232fc0bda9f9ed127694f1d38669db043918328e.zip from github.
    #
    {
        'filename': '232fc0bda9f9ed127694f1d38669db043918328e.zip',  
        'extract_cmd': 'unzip %s -d %(builddir)s/'
    },
    {
        'filename': 'annotationsGRCh37.tar.gz',
        'extract_cmd': 'cp %s %(builddir)s/'
    },
    #
    # Do not decompress the pre-scored variant files and their indices, but 
    # move them "as is" to the build dir.
    #
    {
        'filename': 'InDels_inclAnno.tsv.gz.tbi', 
        'extract_cmd': 'cp %s %(builddir)s/'
    },
    {
        'filename': 'InDels_inclAnno.tsv.gz',
        'extract_cmd': 'cp %s %(builddir)s/'
    },
    {
        'filename': 'whole_genome_SNVs_inclAnno.tsv.gz.tbi',
        'extract_cmd': 'cp %s %(builddir)s/'
    },
    {
        'filename': 'whole_genome_SNVs_inclAnno.tsv.gz',
        'extract_cmd': 'cp %s %(builddir)s/'
    },
    {
        'filename': 'gnomad.genomes.r2.0.1.sites.tsv.gz.tbi',
        'extract_cmd': 'cp %s %(builddir)s/'
    },
    {
        'filename': 'gnomad.genomes.r2.0.1.sites.tsv.gz',
        'extract_cmd': 'cp %s %(builddir)s/'
    },
]

patches = ['CADD_v1.4.patch']

checksums = [
    '00b6eaf6b861c7771decc8abcb18dd55',  # 232fc0bda9f9ed127694f1d38669db043918328e.zip
    '66afec8cc12b7201daed3ba4172cde5d',  # annotationsGRCh37.tar.gz
    '43d0206d626333a681bdd6b16ee6c3c3',  # InDels_inclAnno.tsv.gz.tbi
    '8ce893ea1b82431011fc7fa4ff12dfbf',  # InDels_inclAnno.tsv.gz
    '73173d2eb38a7c69d4e680adcdc431b8',  # whole_genome_SNVs_inclAnno.tsv.gz.tbi
    'ffa700e365803a9f38e2f119399ed22b',  # whole_genome_SNVs_inclAnno.tsv.gz
    '85eb138b68b8c89cdf89d5517df7b83d',  # gnomad.genomes.r2.0.1.sites.tsv.gz.tbi
    '78d5d0ecc81aed2abedf1bff6fa7d479',  # gnomad.genomes.r2.0.1.sites.tsv.gz
    '9e96988a0e091adfe311b38182e2e0a4',  # CADD_v1.4.patch
]

#
# Customizations for the install step.
#
bash_scripts = ['CADD.sh', 'install.sh']
python_scripts = [
    'annotateVEPvcf.py', 'appendPHREDscore.py', 'extract_scored.py', 
    'max_line_hierarchy.py', 'predictSKmodel.py', 'trackTransformation.py', 
    'VCF2vepVCF.py', 'lib/AnalysisLib.py', 'lib/Annotations.py', 
    'lib/columnInfo.py', 'lib/EDict.py', 'lib/tracks.py',
]
not_scripts = ['README.md', 'LICENSE', 'src/environment.yml']

#
# Make scripts executable and move prescored variants to prescored subdir.
#
postinstallcmds = [
    #
    # Post processes on scripts
    # Decompress the scripts, rename the scripts directory to bin, remove zip 
    # file and alter the permission of `install.sh` and `CADD.sh.orig`
    #
    'chmod 755 %(installdir)s/*.sh %(installdir)s/src/scripts/*.py',
    'chmod 400 %(installdir)s/install.sh %(installdir)s/CADD.sh.orig',

    #
    # Annotation files based on genome build GRCh37
    # Decompress the annotations file, decompress the annotation on genome 
    # build GRCh37/h19 and remove the `tar.gz` file
    #
    'tar -vzxf %(builddir)s/annotationsGRCh37.tar.gz '
        + ' -C %(installdir)s/data/annotations',
    'rm -f %(builddir)s/annotationsGRCh37.tar.gz',
    
    # Deal with the prescored file
    
    'mkdir -p %(installdir)s/data/prescored/GRCh37/no_anno',
    'mv -v  %(builddir)s/gnomad.genomes.r2.0.1.sites.tsv.gz* '
        + ' %(installdir)s/data/prescored/GRCh37/no_anno/',
    'mkdir -p %(installdir)s/data/prescored/GRCh37/incl_anno',
    'mv -v  %(builddir)s/InDels_inclAnno.tsv.gz* '
        + ' %(builddir)s/whole_genome_SNVs_inclAnno.tsv.gz* '
        + ' %(installdir)s/data/prescored/GRCh37/incl_anno/',
]

sanity_check_paths = {
    'files': ['%s' % x for x in bash_scripts]
             + ['src/scripts/%s' % x for x in python_scripts]
             + ['%s' % x for x in not_scripts],
    'dirs': ['%s' % x for x in ['config', 'data', 'src', 'test']],
}

moduleclass = 'bio'
modextrapaths = {'PATH': ''}
modloadmsg = """

===============================================================================
USAGE: CADD.sh [-o <outfile>] [-g <genomebuild>] [-a] <infile>

E.g: 
    CADD.sh input.vcf
    CADD.sh -a -g GRCh37 -o output_inclAnno_GRCh37.tvs.gz input.vcf

NOTE: input must be a valid bgzipped (not gzipped) VCF file.
===============================================================================

"""
