easyblock = 'PackedBinary'

name = 'CAPICE'
version = 'v1.3.0'

homepage = 'https://github.com/molgenis/capice'
description = """CAPICE : a computational method for Consequence-Agnostic
Pathogenicity Interpretation of Clinical Exome variations """

toolchain = {'name': 'foss', 'version': '2018b'}

#
# Example URL: https://github.com/molgenis/capice/archive/v1.0.tar.gz
#
sources = [{
    'source_urls': [('https://github.com/molgenis/capice/archive/%s/' % (version))],
    'filename': ('%s.tar.gz' % (version))},{
    'source_urls': [('https://github.com/molgenis/capice/releases/download/%s/' % (version))],
    'filename': ('capice2vcf.jar'),
    'extract_cmd': 'cp %s .'}
]

checksums = [
    'bffb7a191703b45eb193eb180a98df6044b7240459985cab08195d32cb9c10b0',
    '91f485a5867a15dca92e3595aee616de8fd108825e58091ab208af98045e5309'
]

dependencies = [
    ('PythonPlus', '3.7.4', '-v20.02.1', ('foss', '2018b')),
    ('Java', '11', '-LTS', ('dummy', ''))
]

postinstallcmds = [
    'chmod -R 775 %(installdir)s/*.sh',
    'chmod -R g+rwX,o+rX,o-w %(installdir)s/*'
]

sanity_check_paths = {
    'files': [
        'predict.sh',
        'capice2vcf.jar'
    ],
    'dirs': ['CAPICE_model', 'CAPICE_scripts','CAPICE_example']
}

moduleclass = 'bio'
